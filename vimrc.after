" Editor setup
colorscheme xoria256

" Whitespace stuff
set nowrap
set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab
set listchars=tab:▸\ ,eol:¬
set list!

let s:prevcountcache=[[], 0]
function! ShowCount()
    let key=[@/, b:changedtick]
    if s:prevcountcache[0]==#key
        return s:prevcountcache[1]
    endif
    let s:prevcountcache[0]=key
    let s:prevcountcache[1]=0
    let pos=getpos('.')
    try
        redir => subscount
        silent %s///gne
        redir END
        let result=matchstr(subscount, '\d\+')
        let s:prevcountcache[1]=result
        return result
    finally
        call setpos('.', pos)
    endtry
endfunction
set ruler


" Status bar
set laststatus=2
set statusline=%t\ %h%m%r%y\ %{fugitive#statusline()}\ %{ShowCount()}\ %=%c,%l/%L\ %P

" CTags
"map <Leader>rt :!ctags --extra=+f -R *<CR><CR>
map <F2> :tprevious<CR>
map <F4> :tnext<CR>
let tlist_objc_settings = 'ObjectiveC;P:protocols;i:interfaces;types(...)'
nmap <F3> :exec("tag ".expand("<cword>"))<CR>

" function to loop through a specified path and include each tag file
if has('python')
function! BuildTagsFromPath()
python << EOF
import os
import vim

tags = ''
tagpath = "%s/%s" % (os.environ['HOME'], '.vimtags')

if (os.path.exists(tagpath)):
    for file in os.listdir(tagpath):
        if (file != 'README'):
            tags += "%s/%s," % (tagpath, file)

cmdsettags = "set tags=%s" % tags
vim.command(cmdsettags)
EOF
endfunction

call BuildTagsFromPath()
endif

" Curly brackets
inoremap {      {}<Left>
inoremap {<CR>  {<CR>}<Esc>O
inoremap {{     {
inoremap {}     {}

"Sessions
set sessionoptions-=options
map <F9> :mksession! ~/vim_session <cr> " Quick write session with F9
map <F10> :source ~/vim_session <cr>     " And load session with F10

" Building
autocmd FileType objc set makeprg=xbuild.sh
autocmd FileType ruby set makeprg=python\ %
autocmd FileType ruby map <d-r> :!ruby %<CR>
autocmd FileType objc map <d-r> :!xcoderun.sh iphone<CR> <CR>
autocmd FileType objc map <d-R> :!xcoderun.sh ipad<CR> <CR>
map <Leader>m :mak<CR>
map <Leader>g :!git status<CR>


" Help (search google for current word and I'm feeling lucky)
"
map <F1> :!open "http://www.google.com/search?q=<cword>&btnI=3564"<CR><CR>


" Options for clang (obj-c development)
let g:clang_user_options='-fblocks -isysroot /Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator5.0.sdk -D__IPHONE_OS_VERSION_MIN_REQUIRED=40300' 

" Masochist mode - disable arrow keys:
noremap  <Up> ""
noremap! <Up> <Esc>
noremap  <Down> ""
noremap! <Down> <Esc>
noremap  <Left> ""
noremap! <Left> <Esc>
noremap  <Right> ""
noremap! <Right> <Esc>
