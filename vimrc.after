
" TODO: Split this file up into seperate files.
"
let mapleader=","
runtime bundle/vim-pathogen/autoload/pathogen.vim

set nocompatible               " be iMproved
execute pathogen#infect()
syntax on
filetype plugin indent on
filetype on


" CtrlP for fuzzy finding files"
map <Leader>t :CtrlP<CR>

" NERDTree toggle
map <Leader>n :NERDTreeToggle<CR>

" Searching
set hlsearch " highlight searches
set incsearch "search while typing

" Whitespace stuff
set nolist " No list characters
set nowrap
set tabstop=2
set softtabstop=2
set autoindent                  " indent at the same level of the previous line
set shiftwidth=2                " use indents of 4 spaces
set expandtab                   " tabs are spaces, not tabs
set tabpagemax=15               " only show 15 tabs
set nocursorline " No cursor line, thanks
set nonumber
set showmode                    " display the current mode

" Curly brackets
inoremap {      {}<Left>
inoremap {<CR>  {<CR>}<Esc>O
inoremap {{     {
inoremap {}     {}

"Sessions
set sessionoptions-=options
map <F9> :mksession! ~/vim_session <cr> " Quick write session with F9
map <F10> :source ~/vim_session <cr>     " And load session with F10


nmap <buffer> <silent> <F1> :exec 'silent !open "'. escape('http://www.google.com/search?q='.expand('<cword>').'&btnI=745', ' &!%').'"'<cr>:redraw!<cr>

autocmd Filetype java set makeprg=javac\ %
autocmd FileType python set makeprg=python\ %
autocmd FileType ruby map <d-r> :!ruby %<CR>
autocmd FileType java map <d-r> :!javac %; !java %:r<CR>
map <Leader>m :mak<CR>
map <Leader>g :!git status<CR>
map <Leader>b :CtrlPBuffer<CR>



" Masochist mode - disable arrow keys:
"noremap  <Up> ""
"noremap! <Up> <Esc>
"noremap  <Down> ""
"noremap! <Down> <Esc>
"noremap  <Left> ""
"noremap! <Left> <Esc>
"noremap  <Right> ""
"noremap! <Right> <Esc>


set history=1000                " Store a ton of history (default is 20)

" Statusbar stuff
if has('statusline')
    set laststatus=2

    " Broken down into easily includeable segments
    set statusline=%<%f\    " Filename
    "set statusline+=%w%h%m%r " Options
    "set statusline+=%{fugitive#statusline()} "  Git Hotness
    "set statusline+=\ [%{&ff}/%Y]            " filetype
    "set statusline+=\ [%{getcwd()}]          " current dir
    "set statusline+=%=%-14.(%l,%c%V%)\ %p%%  " Right aligned file nav info
endif


" Bundles with vundle
"if filereadable(expand("~/.vimrc.bundles.local"))
"	source ~/.vimrc.bundles.local
"endif



" Specific settings if GUI is running
if has('gui_running')
    if filereadable(expand("~/.gvimrc"))
        source ~/.gvimrc
    endif
endif

map <d-t> :CtrlP<CR>

" Snipmate
"if filereadable(expand("~/.vim/bundle/snipmate-snippets/snippets/support_functions.vim"))
"    source ~/.vim/bundle/snipmate-snippets/snippets/support_functions.vim
"endif


